# Generated by Django 4.1.7 on 2024-02-07 22:29

import brand.models.brand
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import model_utils.fields
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('brand', '0038_commentary_embrace'),
    ]

    operations = [
        migrations.AlterField(
            model_name='brand',
            name='tag',
            field=models.CharField(help_text='the tag we use or this brand record at Bank.Green. ', max_length=100, unique=True, validators=[brand.models.brand.validate_tag]),
        ),
        migrations.CreateModel(
            name='HistoricalBrand',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(default='-unnamed-', max_length=200, verbose_name='Name of this brand')),
                ('name_locked', models.BooleanField(default=False)),
                ('aliases', models.CharField(blank=True, help_text='Other names for the brand, used for search. comma seperated. i.e. BOFA, BOA', max_length=200, null=True)),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description of this instance of this brand')),
                ('description_locked', models.BooleanField(default=False)),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website of this brand. i.e. bankofamerica.com')),
                ('website_locked', models.BooleanField(default=False)),
                ('countries', django_countries.fields.CountryField(blank=True, help_text='Where the brand offers retails services', max_length=746, multiple=True)),
                ('tag', models.CharField(db_index=True, help_text='the tag we use or this brand record at Bank.Green. ', max_length=100, validators=[brand.models.brand.validate_tag])),
                ('tag_locked', models.BooleanField(default=True)),
                ('permid', models.TextField(blank=True, default='')),
                ('isin', models.TextField(blank=True, default='')),
                ('viafid', models.TextField(blank=True, default='')),
                ('lei', models.TextField(blank=True, default='')),
                ('googleid', models.TextField(blank=True, default='')),
                ('rssd', models.TextField(blank=True, default='')),
                ('rssd_hd', models.TextField(blank=True, default='')),
                ('cusip', models.TextField(blank=True, default='')),
                ('thrift', models.TextField(blank=True, default='')),
                ('thrift_hc', models.TextField(blank=True, default='')),
                ('aba_prim', models.TextField(blank=True, default='')),
                ('ncua', models.TextField(blank=True, default='')),
                ('fdic_cert', models.TextField(blank=True, default='')),
                ('occ', models.TextField(blank=True, default='')),
                ('ein', models.TextField(blank=True, default='')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical brand',
                'verbose_name_plural': 'historical brands',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
