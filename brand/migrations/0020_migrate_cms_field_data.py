# Generated by Django 4.0.7 on 2022-10-05 12:28

from django.db import migrations

from brand.models.commentary import RatingChoice

import re


def escape_markdown(text):
    escape_chars = r"_*[]()~`>#+-=|{}.!"
    return re.sub(f"([{re.escape(escape_chars)}])", r"\\\1", text)


def make_subtitle(commentary):
    if commentary.headline is not None:
        commentary.subtitle = escape_markdown(commentary.headline)


def make_header(commentary):
    # not doing anything here because the frontend takes care of this with constants
    pass


def make_summary(commentary):
    # add BANK_RATING_WORST so we can include link
    if commentary.rating == "worst":
        commentary.summary = (
            "Your bank is one of the 60 biggest funders of fossil fuels in the world\*. In the 6 years since the Paris Agreement, the banks in this category have funneled $4.6 trillion into coal, oil, and gas, rapidly accelerating the climate crisis.\n[* Details here](https://www.fossilbanks.org/fossil-banks?bank=%s)"
            % commentary.brand.tag
        )


def make_details(commentary):
    if commentary.rating == "worst" or commentary.rating == "bad":
        commentary.details = (
            "While you’ve been stashing away money for a car or a weekend get-away, %s has been using your savings to lend to some very questionable fossil fuel friends.\n\nAnd it's not just a little here and there, we’re talking about %s in the 6 years since 197 countries agreed to drastically reduce their greenhouse gas emissions in the Paris Agreement."
            % (
                commentary.brand.name,
                commentary.amount_financed_since_2016
                if commentary.amount_financed_since_2016
                else "large amounts",
            )
        )
    pass


def migrate_cms(apps, schema_editor):
    Commentary = apps.get_model("brand", "commentary")
    for commentary in Commentary.objects.all():
        make_subtitle(commentary)
        make_header(commentary)
        make_summary(commentary)
        make_details(commentary)
        commentary.save()


class Migration(migrations.Migration):

    dependencies = [("brand", "0019_remove_commentary_result_page_variation")]

    operations = [migrations.RunPython(migrate_cms)]
