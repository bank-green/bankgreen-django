# Generated by Django 4.1.7 on 2023-10-04 19:03

import datetime
from django.db import migrations, models
import django.utils.timezone
import django_countries.fields
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ("cities_light", "0011_alter_city_country_alter_city_region_and_more"),
        ("brand", "0036_alter_commentary_top_pick"),
    ]

    operations = [
        migrations.CreateModel(
            name="BrandSuggestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="-unnamed-", max_length=200, verbose_name="Name of this brand"
                    ),
                ),
                ("name_locked", models.BooleanField(default=False)),
                (
                    "aliases",
                    models.CharField(
                        blank=True,
                        help_text="Other names for the brand, used for search. comma seperated. i.e. BOFA, BOA",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default="",
                        null=True,
                        verbose_name="Description of this instance of this brand",
                    ),
                ),
                ("description_locked", models.BooleanField(default=False)),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        null=True,
                        verbose_name="Website of this brand. i.e. bankofamerica.com",
                    ),
                ),
                ("website_locked", models.BooleanField(default=False)),
                (
                    "countries",
                    django_countries.fields.CountryField(
                        blank=True,
                        help_text="Where the brand offers retails services",
                        max_length=746,
                        multiple=True,
                    ),
                ),
                (
                    "tag",
                    models.CharField(
                        help_text="the tag we use or this brand record at Bank.Green. ",
                        max_length=100,
                        unique=True,
                    ),
                ),
                ("tag_locked", models.BooleanField(default=True)),
                (
                    "submitter_name",
                    models.CharField(
                        default="unnamed", max_length=100, verbose_name="Name of the submitter"
                    ),
                ),
                (
                    "submitter_email",
                    models.EmailField(
                        blank=True, max_length=100, verbose_name="Email of the submitter"
                    ),
                ),
                (
                    "submission_date",
                    models.DateTimeField(blank=True, default=datetime.datetime.now),
                ),
                (
                    "regions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="regions in which there are local branches of a bank",
                        to="cities_light.region",
                    ),
                ),
                (
                    "subregions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="regions in which there are local branches of a bank",
                        to="cities_light.subregion",
                    ),
                ),
            ],
            options={"verbose_name_plural": "Brand suggestions"},
        )
    ]
