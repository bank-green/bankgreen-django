# Generated by Django 4.1.4 on 2022-12-15 15:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("brand", "0022_alter_brand_aba_prim_alter_brand_cusip_and_more"),
        ("datasource", "0003_alter_usnic_aba_prim_alter_usnic_cusip_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="SuggestedAssociation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "certainty",
                    models.IntegerField(
                        default=0,
                        help_text="how certain the system is of this association. 0 is more certain. 10 is least certain.",
                        validators=[
                            django.core.validators.MaxValueValidator(10),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="brand.brand"
                    ),
                ),
                (
                    "datasource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="datasource.datasource"
                    ),
                ),
            ],
            options={"unique_together": {("brand", "datasource")}},
        ),
        migrations.AddField(
            model_name="datasource",
            name="suggested_associations",
            field=models.ManyToManyField(
                help_text="link between brands and datasources that may be related to eachother",
                through="datasource.SuggestedAssociation",
                to="brand.brand",
            ),
        ),
    ]
